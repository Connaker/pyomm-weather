// pipeline {
//     agent any
//     tools {nodejs "node_v18"}
//     stages {
//         stage('SCM Checkout') {
//             steps {
//                 git branch: 'devel', url: 'https://github.com/Connaker/pyowm-weatherapp.git'
//             }

//             // run sonarqube test
//         }

//         stage('Install Typescript') {
//             steps {
//             sh 'npm install typescript'
//                 }
//         }

//         stage('Run Sonarqube') {
//             environment {
//                 scannerHome = tool 'sonarscanner';
//             }
//             steps {
//                 withSonarQubeEnv(credentialsId: 'sonarqube', installationName: 'sonarqube') {
//                     sh "${scannerHome}/bin/sonar-scanner"
//                 }
//             }
//         }

//         stage('Bandit') {
//             agent {
//                     docker { image 'python:3.10-slim-buster'
//                     args '-u root:sudo'
//                     }
//                 }
//             environment {
//                 FOR_SEQUENTIAL = 'vul-scan'
//             }
//             stages {
//                 stage("Install Bandi") {
//                         steps {
//                             sh "pip3 install bandit"
//                         }
//                     }
//                 stage('Run Bandit Scan') {
//                         steps {
//                             git branch: 'devel', url: 'https://github.com/Connaker/pyowm-weatherapp.git'
//                             sh label: '', returnStatus: true, script: """
//                             bandit -r -f html -o bandit_report_weatherapp.html .
//                             """
//                         }
//                         }
//                 stage('Run Bandit Baseline Scan') {
//                         steps {
//                             sh label: '', returnStatus: true, script: """
//                             bandit -r -f json -o bandit_report_weatherapp.json .
//                             """
//                         }
//                     }
//                 stage ('Archive report') {
//                         steps {
//                             archiveArtifacts artifacts: 'bandit_*.*'
//                             deleteDir()
//                         }
//                     }
//             }

//         }
//     }
// }

pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = 'weatherapp'
        DOCKER_TAG = 'v2.0.1'
        HARBOR_REGISTRY = '192.168.4.204'
        HARBOR_PROJECT = 'weatherapp'
        HARBOR_USER = credentials('harbor-login') 
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh """
                    docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} -f Dockerfile .
                """
            }
        }
        
        stage('Push to Harbor Repository') {
            steps {
                sh """
                    echo \${env.HARBOR_USER_PSW} | docker login ${HARBOR_REGISTRY} -u \${env.HARBOR_USER_USR} --password-stdin
                    docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${DOCKER_IMAGE}:${DOCKER_TAG}
                    docker push ${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${DOCKER_IMAGE}:${DOCKER_TAG}
                """
            }
        }
        
        stage('Cleanup') {
            steps {

                sh """
                    docker rmi ${DOCKER_IMAGE}:${DOCKER_TAG}
                    docker rmi ${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${DOCKER_IMAGE}:${DOCKER_TAG}
                """
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}


                